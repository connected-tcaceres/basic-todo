var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.312,1,1.846]],["body/guards/AdminGuard.html",[1,2.548,2,3.247,3,0.313,4,0.271,5,0.271,6,2.71,7,0.608,8,1.628,9,4.457,10,1.707,11,2.71,12,4.801,13,1.075,14,3.247,15,1.628,16,0.032,17,1.628,18,0.902,19,1.38,20,3.669,21,3.876,22,3.247,23,2.71,24,1.203,25,0.547,26,1.169,27,0.728,28,2.093,29,2.833,30,2.357,31,0.313,32,0.071,33,2.093,34,1.556,35,1.929,36,3.191,37,2.71,38,2.71,39,1.628,40,1.556,41,2.093,42,3.247,43,3.247,44,0.022,45,0.022]],["title/modules/AppModule.html",[46,1.18,47,2.053]],["body/modules/AppModule.html",[3,0.299,4,0.259,5,0.259,16,0.032,25,0.623,27,0.697,31,0.299,32,0.068,40,1.49,44,0.021,45,0.021,46,1.58,47,3.988,48,1.364,49,1.872,50,2.594,51,2.594,52,3.29,53,3.29,54,3.29,55,2.983,56,2.242,57,1.633,58,1.633,59,3.108,60,3.561,61,3.108,62,2.594,63,3.108,64,3.108,65,3.108,66,2.003,67,3.108,68,3.108,69,3.108,70,3.108,71,1.364,72,1.801]],["title/controllers/AuthController.html",[73,1.527,74,2.053]],["body/controllers/AuthController.html",[3,0.218,4,0.189,5,0.189,7,0.423,8,1.257,13,0.83,15,1.257,16,0.032,17,1.257,18,0.836,19,1.066,24,1.257,25,0.56,27,0.507,30,1.641,31,0.218,32,0.05,34,1.084,35,1.987,39,0.837,40,1.953,41,3.284,44,0.017,45,0.017,71,0.992,73,1.084,74,2.187,75,1.887,76,1.641,77,2.261,78,2.953,79,3.4,80,4.074,81,2.261,82,3.284,83,4.276,84,1.784,85,2.261,86,2.261,87,2.261,88,2.261,89,2.261,90,2.261,91,1.457,92,1.641,93,2.463,94,4.074,95,2.957,96,1.641,97,1.641,98,2.463,99,3.393,100,2.463,101,1.641,102,4.074,103,1.31,104,1.31,105,2.141,106,1.887,107,1.967,108,2.261,109,2.261,110,2.261,111,1.31,112,2.261,113,0.911,114,2.463,115,2.918,116,2.261,117,3.393,118,2.261,119,3.393,120,3.393,121,2.463,122,2.187,123,2.261,124,2.261,125,1.641,126,1.31,127,2.261,128,2.261,129,2.261]],["title/modules/AuthModule.html",[46,1.18,52,1.846]],["body/modules/AuthModule.html",[3,0.263,4,0.227,5,0.227,16,0.032,25,0.65,27,0.611,28,1.756,31,0.263,32,0.06,44,0.019,45,0.019,46,1.441,48,1.196,49,1.707,52,3.429,55,2.861,56,2.045,57,1.432,58,1.432,60,3.248,62,2.274,66,1.756,71,1.707,72,2.255,74,2.925,105,2.861,106,2.274,130,2.274,131,2.725,132,2.274,133,3.155,134,2.725,135,3.891,136,1.756,137,2.725,138,1.978,139,2.725,140,2.725,141,3.891,142,2.508,143,2.725,144,2.725,145,3.788,146,2.725,147,2.725,148,2.725,149,2.274,150,2.725,151,2.274,152,2.725,153,2.725,154,2.725,155,2.725,156,2.725]],["title/injectables/AuthService.html",[26,0.847,105,1.674]],["body/injectables/AuthService.html",[3,0.239,4,0.207,5,0.207,7,0.464,8,1.346,10,1.91,13,1.158,15,1.755,16,0.032,17,1.755,18,0.972,19,1.487,24,1.593,25,0.472,26,0.967,27,0.556,31,0.239,32,0.055,35,1.887,39,1.868,44,0.018,45,0.018,78,3.054,79,3.033,91,2.342,105,1.91,113,2.123,115,1.598,126,2.106,138,1.799,157,1.188,158,2.069,159,3.633,160,3.633,161,2.479,162,2.526,163,5.444,164,2.479,165,3.633,166,2.479,167,1.464,168,3.633,169,2.479,170,3.633,171,1.887,172,2.479,173,2.479,174,3.633,175,3.25,176,3.033,177,2.479,178,2.479,179,2.479,180,2.637,181,2.479,182,2.069,183,1.598,184,2.479,185,2.479,186,2.479,187,1.598,188,2.479,189,1.598,190,2.479,191,2.479]],["title/classes/CreateAuthDto.html",[32,0.07,192,2.053]],["body/classes/CreateAuthDto.html",[3,0.453,4,0.392,5,0.392,16,0.029,31,0.453,32,0.104,44,0.027,45,0.027,192,3.585,193,1.743,194,3.928,195,3.416]],["title/classes/CreateTodoDto.html",[32,0.07,196,1.674]],["body/classes/CreateTodoDto.html",[3,0.335,4,0.29,5,0.29,7,0.65,13,1.26,16,0.031,18,1.058,19,1.444,25,0.382,31,0.335,32,0.101,44,0.023,45,0.023,84,2.709,171,2.408,193,1.287,196,2.417,197,4.58,198,2.522,199,2.204,200,2.709,201,4.303,202,4.303,203,4.598,204,3.474,205,2.964,206,2.9,207,3.474,208,3.474,209,3.839,210,5.155,211,3.839,212,4.303,213,2.239]],["title/classes/CreateUserDto.html",[32,0.07,214,1.674]],["body/classes/CreateUserDto.html",[3,0.332,4,0.287,5,0.287,7,0.645,13,1.255,16,0.031,18,1.053,19,1.436,25,0.378,31,0.332,32,0.101,44,0.023,45,0.023,84,2.698,171,2.399,183,3.308,187,3.308,189,3.308,193,1.276,199,2.191,205,2.947,206,2.875,209,3.816,211,3.816,212,3.816,213,2.22,214,2.403,215,4.564,216,2.5,217,5.133,218,3.444,219,3.444,220,3.444,221,3.444,222,3.444,223,3.444,224,3.444,225,3.444]],["title/injectables/JwtAuthGuard.html",[26,0.847,142,2.053]],["body/injectables/JwtAuthGuard.html",[3,0.307,4,0.265,5,0.265,7,0.596,8,1.606,9,3.619,10,1.673,11,2.656,12,4.772,13,1.06,15,1.606,16,0.032,17,1.606,18,0.89,19,1.362,20,3.619,21,3.844,23,2.656,24,1.179,25,0.582,26,1.153,27,0.714,28,2.051,29,2.795,30,2.31,31,0.307,32,0.07,34,1.525,35,1.396,36,3.147,37,2.656,38,2.656,39,1.606,40,1.525,44,0.021,45,0.021,136,2.051,142,2.795,157,1.525,226,4.116,227,2.656,228,3.182,229,3.182,230,3.182,231,1.673,232,3.182,233,2.656,234,3.182]],["title/injectables/JwtStrategy.html",[26,0.847,133,1.846]],["body/injectables/JwtStrategy.html",[3,0.283,4,0.245,5,0.245,7,0.55,8,1.519,10,1.543,13,1.003,15,1.519,16,0.032,17,1.519,18,0.842,19,1.288,24,1.088,25,0.591,26,1.091,27,0.658,31,0.283,32,0.065,35,1.288,39,1.088,41,2.643,44,0.02,45,0.02,66,1.892,98,2.131,104,1.702,115,1.892,133,2.377,136,1.892,145,4.271,149,2.451,151,2.451,157,1.407,167,1.652,171,1.288,180,2.977,182,2.451,183,2.643,187,2.643,189,2.643,231,1.543,233,2.451,235,2.131,236,4.101,237,4.101,238,2.936,239,4.101,240,2.936,241,2.936,242,2.936,243,2.451,244,2.936,245,2.131,246,2.451,247,2.936,248,2.936,249,2.936,250,2.936,251,2.936,252,2.936,253,2.936,254,2.936,255,2.936,256,2.936]],["title/classes/LoginDto.html",[32,0.07,82,2.053]],["body/classes/LoginDto.html",[3,0.401,4,0.347,5,0.347,7,0.78,13,1.018,16,0.031,18,0.854,25,0.457,31,0.401,32,0.114,44,0.026,45,0.026,82,3.329,84,2.189,113,2.081,167,2.262,193,1.543,199,2.476,213,2.684,257,3.476,258,5.615,259,4.164]],["title/modules/PrismaModule.html",[46,1.18,53,1.846]],["body/modules/PrismaModule.html",[3,0.36,4,0.311,5,0.311,16,0.031,25,0.53,27,0.837,31,0.36,32,0.082,44,0.024,45,0.024,46,1.786,48,1.639,49,2.116,53,3.528,56,2.534,57,1.963,58,1.963,72,2.795,260,3.117,261,3.117,262,3.117,263,3.051,264,3.734,265,4.024,266,4.821,267,3.734]],["title/injectables/PrismaService.html",[26,0.847,263,1.527]],["body/injectables/PrismaService.html",[3,0.325,4,0.281,5,0.281,7,0.631,8,1.67,13,1.102,15,1.249,16,0.032,17,1.249,18,0.692,19,1.059,24,1.67,25,0.495,26,1.199,27,0.756,31,0.325,32,0.074,33,2.173,44,0.022,45,0.022,78,3.442,126,2.613,157,1.616,231,2.369,263,2.16,268,2.814,269,5.078,270,4.507,271,5.814,272,4.507,273,5.421,274,3.371,275,2.814,276,3.371,277,1.954,278,3.371,279,3.371,280,3.371]],["title/controllers/TodoController.html",[73,1.527,281,2.053]],["body/controllers/TodoController.html",[1,0.917,3,0.152,4,0.132,5,0.132,7,0.296,8,0.951,13,1.002,15,1.518,16,0.032,17,1.626,18,1.021,19,1.287,24,1.518,25,0.562,27,0.355,31,0.152,32,0.035,34,0.758,35,1.422,39,1.518,40,1.231,44,0.013,45,0.013,71,0.694,73,0.758,76,1.149,78,2.885,83,2.706,84,2.154,91,2.088,92,1.863,93,1.863,95,2.706,96,1.149,97,1.149,100,2.706,101,1.149,103,0.917,104,0.917,107,1.488,111,0.917,113,2.352,114,1.149,121,1.149,122,1.02,125,1.149,126,1.878,167,1.768,196,2.307,200,1.349,281,1.655,282,1.321,283,3.111,284,1.231,285,2.088,286,1.655,287,1.655,288,2.088,289,1.321,290,3.185,291,1.321,292,3.104,293,1.582,294,1.321,295,2.088,296,2.403,297,1.321,298,2.143,299,1.321,300,2.143,301,2.704,302,2.143,303,3.727,304,1.582,305,1.02,306,1.321,307,1.582,308,1.582,309,1.02,310,1.321,311,1.582,312,1.02,313,2.791,314,1.321,315,1.582,316,1.321,317,1.321,318,2.143,319,3.663,320,1.321,321,1.149,322,1.321,323,2.143,324,2.143,325,2.143,326,1.703,327,1.321,328,1.02,329,1.863,330,1.02,331,1.582,332,1.582,333,1.582,334,1.321,335,1.321,336,1.582,337,1.582,338,2.704,339,1.321,340,1.582,341,1.321,342,1.321,343,1.582,344,2.567,345,1.582,346,1.321,347,1.321,348,1.321,349,1.582,350,1.321,351,1.321,352,1.582,353,1.321,354,1.321,355,1.582]],["title/classes/TodoEntity.html",[32,0.07,292,2.053]],["body/classes/TodoEntity.html",[3,0.314,4,0.272,5,0.272,7,0.61,13,1.439,16,0.031,18,1.208,25,0.358,31,0.314,32,0.072,33,2.841,44,0.022,45,0.022,113,2.155,167,2.011,171,2.347,193,1.208,199,2.113,200,2.624,201,4.168,202,4.168,205,2.841,277,1.89,283,4.168,292,2.841,356,2.722,357,4.168,358,4.168,359,4.168,360,4.465,361,3.26,362,3.26,363,3.26,364,3.26,365,3.26,366,3.26,367,3.26]],["title/modules/TodoModule.html",[46,1.18,54,1.846]],["body/modules/TodoModule.html",[3,0.367,4,0.317,5,0.317,16,0.031,25,0.592,27,0.853,31,0.367,32,0.084,44,0.024,45,0.024,46,1.808,48,1.67,49,2.142,54,3.485,56,2.565,57,2,58,2,71,2.142,72,2.829,281,3.473,326,3.16,327,3.177,368,3.177,369,3.177,370,3.806,371,3.806]],["title/injectables/TodoService.html",[26,0.847,326,1.674]],["body/injectables/TodoService.html",[3,0.207,4,0.179,5,0.179,7,0.403,8,1.211,10,1.13,13,1.27,15,1.852,16,0.032,17,1.852,18,1.026,19,1.57,24,1.852,25,0.485,26,0.869,27,0.482,31,0.207,32,0.047,34,1.031,39,1.852,44,0.016,45,0.016,111,1.247,113,2.446,157,1.031,167,2.014,196,2.628,263,2.396,284,1.566,285,2.106,286,2.106,287,2.106,288,2.106,289,2.728,295,2.106,296,2.845,305,2.106,309,2.106,312,2.106,313,3.103,326,1.718,328,1.386,329,2.372,330,1.386,358,3.685,372,1.795,373,4.414,374,1.795,375,2.151,376,2.151,377,2.728,378,2.151,379,2.151,380,2.151,381,2.151,382,2.151,383,1.795,384,2.151,385,2.728,386,2.151,387,2.151,388,2.151,389,2.151,390,2.151]],["title/classes/UpdateAuthDto.html",[32,0.07,391,2.312]],["body/classes/UpdateAuthDto.html",[3,0.421,4,0.364,5,0.364,16,0.031,25,0.584,31,0.421,32,0.096,44,0.026,45,0.026,103,2.533,192,2.817,193,1.619,195,3.172,231,2.297,284,2.095,391,3.862,392,3.648,393,3.172,394,4.37,395,4.37]],["title/classes/UpdateTodoDto.html",[32,0.07,313,1.846]],["body/classes/UpdateTodoDto.html",[3,0.419,4,0.362,5,0.362,16,0.031,25,0.582,31,0.419,32,0.096,44,0.026,45,0.026,193,1.61,196,2.284,198,3.155,231,2.284,284,2.083,313,3.074,329,3.155,393,3.155,396,3.628,397,3.155,398,3.155,399,4.346]],["title/classes/UpdateUserDto.html",[32,0.07,400,1.846]],["body/classes/UpdateUserDto.html",[3,0.419,4,0.362,5,0.362,16,0.031,25,0.582,31,0.419,32,0.096,44,0.026,45,0.026,193,1.61,214,2.284,216,3.155,231,2.284,284,2.083,393,3.155,397,3.155,398,3.155,400,3.074,401,3.628,402,3.155,403,4.346]],["title/controllers/UserController.html",[73,1.527,404,2.053]],["body/controllers/UserController.html",[1,0.943,3,0.157,4,0.136,5,0.136,7,0.305,8,0.973,13,1.016,15,1.54,16,0.032,17,1.647,18,1.031,19,1.306,24,1.54,25,0.552,27,0.365,31,0.157,32,0.036,34,0.78,35,1.449,39,1.54,40,1.259,44,0.013,45,0.013,71,0.714,73,0.78,76,1.181,78,2.913,83,2.751,84,2.185,91,2.128,92,1.907,93,1.907,95,2.751,96,1.181,97,1.181,100,2.751,101,1.181,103,0.943,104,0.943,107,1.522,111,0.943,113,2.308,114,1.181,121,1.181,122,1.049,125,1.181,126,1.914,162,1.583,167,1.791,175,2.443,176,1.359,200,1.381,214,2.337,284,1.259,285,2.128,286,1.693,287,1.693,288,2.128,291,1.359,294,1.359,295,2.128,296,2.443,297,1.359,298,2.192,299,1.359,300,2.192,301,2.756,302,2.192,305,1.049,306,1.359,309,1.049,310,1.359,312,1.049,314,1.359,316,1.359,317,1.359,318,2.192,319,3.711,320,1.359,321,1.181,322,1.359,323,2.192,324,2.192,325,2.192,328,1.049,330,1.049,334,1.359,335,1.359,338,2.756,339,1.359,341,1.359,342,1.359,346,1.359,347,1.359,348,1.359,350,1.359,351,1.359,353,1.359,354,1.359,400,2.821,402,1.907,404,1.693,405,1.359,406,1.359,407,3.137,408,1.628,409,3.789,410,1.628,411,1.628,412,1.628,413,1.628,414,1.628,415,1.359,416,1.628,417,1.628,418,1.628,419,1.628,420,1.628,421,2.626,422,1.628,423,1.628,424,1.628]],["title/classes/UserEntity.html",[32,0.07,407,2.053]],["body/classes/UserEntity.html",[3,0.326,4,0.282,5,0.282,7,0.634,13,1.423,16,0.031,18,1.195,25,0.372,31,0.326,32,0.075,33,2.914,44,0.022,45,0.022,113,1.821,167,2.05,171,2.383,175,3.28,183,3.28,187,3.28,189,3.28,193,1.254,199,2.167,205,2.914,277,1.962,357,4.248,359,4.248,360,4.533,407,2.914,425,2.826,426,3.385,427,3.385,428,3.385,429,3.385,430,3.385,431,3.385]],["title/modules/UserModule.html",[46,1.18,55,1.674]],["body/modules/UserModule.html",[3,0.348,4,0.302,5,0.302,16,0.031,25,0.577,27,0.811,31,0.348,32,0.08,44,0.023,45,0.023,46,1.749,48,1.587,49,2.072,55,3.175,56,2.482,57,1.9,58,1.9,71,2.072,72,2.737,162,3.037,265,3.941,404,3.389,415,3.018,432,3.018,433,3.018,434,3.018,435,3.616,436,3.616]],["title/injectables/UserService.html",[26,0.847,162,1.527]],["body/injectables/UserService.html",[3,0.208,4,0.18,5,0.18,7,0.405,8,1.216,10,1.137,13,1.273,15,1.856,16,0.032,17,1.856,18,1.028,19,1.573,24,1.856,25,0.523,26,0.873,27,0.485,31,0.208,32,0.048,34,1.036,39,1.856,44,0.016,45,0.016,111,1.253,113,2.397,157,1.036,162,1.573,167,2.018,175,1.394,214,2.633,263,2.401,277,1.253,284,1.573,285,2.115,286,2.115,287,2.115,288,2.115,295,2.115,296,2.853,305,2.115,309,2.115,312,2.115,328,1.394,330,1.394,374,1.805,377,2.739,383,1.805,385,2.739,400,3.108,402,2.382,406,2.739,437,1.805,438,4.427,439,2.162,440,2.162,441,3.281,442,2.162,443,2.162,444,2.162,445,2.162,446,2.162,447,2.162,448,2.162,449,2.162,450,2.162,451,2.162,452,2.162]],["title/coverage.html",[453,3.149]],["body/coverage.html",[0,1.811,1,1.446,5,0.208,6,2.082,16,0.031,18,0.512,26,1.405,29,1.608,32,0.126,44,0.018,45,0.018,73,2.069,74,1.608,75,2.082,82,1.608,105,1.311,107,1.446,122,1.608,133,1.446,142,1.608,158,2.082,162,1.196,192,1.608,194,2.082,195,2.649,196,1.311,197,2.082,198,2.649,214,1.311,215,2.082,216,2.649,226,2.082,227,2.082,235,2.649,245,1.811,257,2.082,263,1.196,268,2.082,281,1.608,282,2.082,290,1.811,292,1.608,313,1.446,326,1.311,356,2.082,372,2.082,391,1.811,392,2.082,396,2.082,400,1.446,401,2.082,404,1.608,405,2.082,407,1.608,425,2.082,437,2.082,453,1.811,454,2.494,455,2.494,456,2.494,457,6.344,458,5.055,459,2.494,460,3.047,461,4.75,462,5.706,463,2.494,464,2.082,465,2.494,466,2.082,467,3.65,468,4.316,469,3.65,470,2.082,471,2.082,472,2.494,473,2.494,474,2.494]],["title/dependencies.html",[49,1.68,475,2.224]],["body/dependencies.html",[16,0.032,27,0.793,28,2.279,32,0.102,44,0.023,45,0.023,49,1.551,66,2.279,103,2.049,104,2.049,115,2.279,136,2.279,138,2.566,171,1.551,213,2.279,243,3.883,277,2.049,321,2.566,397,2.566,398,2.566,476,5.74,477,3.535,478,3.535,479,3.535,480,3.535,481,3.535,482,3.535,483,3.535,484,3.535,485,3.535,486,3.535,487,3.535,488,3.535,489,3.535,490,3.535,491,3.535,492,3.535,493,3.535,494,3.535,495,3.535,496,3.535,497,3.535,498,3.535,499,3.535]],["title/miscellaneous/functions.html",[500,1.717,501,3.196]],["body/miscellaneous/functions.html",[7,0.897,16,0.028,44,0.028,45,0.028,464,3.999,466,4.98,500,3.088,501,3.999,502,4.79]],["title/index.html",[7,0.499,503,2.665,504,2.665]],["body/index.html",[4,0.265,16,0.031,44,0.021,45,0.021,200,1.673,275,2.656,453,2.31,505,3.182,506,3.182,507,4.336,508,3.182,509,3.182,510,3.182,511,3.182,512,3.182,513,3.182,514,4.931,515,3.182,516,3.182,517,3.182,518,3.182,519,5.85,520,3.182,521,3.182,522,5.717,523,3.182,524,3.182,525,4.336,526,3.182,527,3.182,528,3.182,529,3.182,530,4.336,531,4.336,532,3.182,533,3.182,534,3.182,535,4.336,536,4.336,537,3.182,538,3.182,539,3.182,540,3.182,541,3.182,542,2.656,543,3.182,544,3.182,545,3.182,546,3.182,547,3.182,548,3.182,549,3.182,550,3.182,551,3.182,552,3.182,553,2.656,554,3.182,555,3.182,556,3.182,557,3.182,558,3.182,559,3.182,560,2.656]],["title/modules.html",[48,1.904]],["body/modules.html",[16,0.026,44,0.026,45,0.026,47,2.786,48,1.897,52,2.505,53,2.505,54,2.505,55,2.272,542,5.093,561,6.101,562,6.101,563,6.101]],["title/overview.html",[564,3.622]],["body/overview.html",[0,2.23,16,0.031,44,0.021,45,0.021,47,3.909,48,1.348,49,1.857,50,2.564,51,2.564,52,3.473,53,3.279,54,3.172,55,3.046,56,2.224,57,1.615,58,1.615,71,1.348,105,2.545,130,2.564,132,2.564,133,2.806,157,1.472,162,2.778,193,1.138,260,2.564,261,2.564,262,2.564,263,2.778,326,2.545,368,2.564,369,2.564,432,2.564,433,2.564,434,2.564,564,2.564,565,3.072,566,3.072,567,3.072,568,3.072,569,3.072]],["title/properties.html",[199,1.835,475,2.224]],["body/properties.html",[16,0.031,44,0.027,45,0.027,199,2.255,200,2.473,553,3.928,560,3.928,570,4.705,571,4.705,572,4.705]],["title/miscellaneous/variables.html",[500,1.717,573,3.196]],["body/miscellaneous/variables.html",[7,0.671,16,0.032,18,0.735,21,2.601,29,3.025,35,1.572,36,2.601,39,1.327,40,1.717,41,3.025,44,0.023,45,0.023,98,2.601,107,2.721,171,2.06,180,3.407,235,2.601,245,3.407,246,2.991,290,3.407,460,2.991,470,2.991,471,3.918,500,2.31,573,2.991,574,3.583,575,4.693,576,3.583,577,5.554,578,5.554,579,3.583,580,3.583,581,3.583,582,3.583,583,3.583,584,3.583,585,3.583]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":571,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":569,"title":{},"body":{"overview.html":{}}}],["1.4.6",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":566,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":565,"title":{},"body":{"overview.html":{}}}],["6",{"_index":567,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["9",{"_index":568,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["_data",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["amazing",{"_index":543,"title":{},"body":{"index.html":{}}}],["apicreatedresponse",{"_index":323,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["apiheader",{"_index":324,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["apinocontentresponse",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":325,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('todo",{"_index":337,"title":{},"body":{"controllers/TodoController.html":{}}}],["apitags('user",{"_index":418,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":275,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":280,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_guard",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["applications",{"_index":513,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":47,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":394,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":195,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.guard",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":227,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":229,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":228,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/public.decorator",{"_index":335,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["auth/guards/admin.guard",{"_index":334,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":74,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":230,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":232,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":52,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":553,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["backers",{"_index":544,"title":{},"body":{"index.html":{}}}],["body",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":205,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/TodoEntity.html":{},"classes/UserEntity.html":{}}}],["bootstrap",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":563,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":561,"title":{},"body":{"modules.html":{}}}],["building",{"_index":508,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["check",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":32,"title":{"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/TodoEntity.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":193,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/TodoEntity.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cli",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":260,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":261,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":262,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":368,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":369,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":432,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":433,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":434,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["config.get('jwt_secret",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["const",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(prismaservice",{"_index":374,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(reflector",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["constructor(userservice",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":300,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["context",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{}}}],["controller",{"_index":73,"title":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('todo",{"_index":336,"title":{},"body":{"controllers/TodoController.html":{}}}],["controller('user",{"_index":417,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["cookieextractor",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":453,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":284,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":339,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["create(createtododto",{"_index":289,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["create(createuserdto",{"_index":406,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createauthdto",{"_index":192,"title":{"classes/CreateAuthDto.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createdat",{"_index":357,"title":{},"body":{"classes/TodoEntity.html":{},"classes/UserEntity.html":{}}}],["createparamdecorator",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtododto",{"_index":196,"title":{"classes/CreateTodoDto.html":{}},"body":{"classes/CreateTodoDto.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":214,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ctx",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":385,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":360,"title":{},"body":{"classes/TodoEntity.html":{},"classes/UserEntity.html":{}}}],["decorators",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["decorators/public.decorator",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["default",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":353,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@useguards(adminguard)@httpcode(httpstatus.no_content",{"_index":310,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":200,"title":{},"body":{"classes/CreateTodoDto.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":521,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":328,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":330,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":509,"title":{},"body":{"index.html":{}}}],["email",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{}}}],["enableshutdownhooks",{"_index":270,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":272,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/todo.entity",{"_index":331,"title":{},"body":{"controllers/TodoController.html":{}}}],["entities/user.entity",{"_index":416,"title":{},"body":{"controllers/UserController.html":{}}}],["env.${process.env.node_env",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":265,"title":{},"body":{"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":231,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([cookieextractor",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":285,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(res",{"_index":294,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["findall(take",{"_index":377,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":286,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":348,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":305,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":507,"title":{},"body":{"index.html":{}}}],["function",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":501,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":347,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apiokresponse({type",{"_index":306,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["get('whoami",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('whoami')@apiokresponse({type",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@apiokresponse({type",{"_index":297,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["getnumberoftodos",{"_index":373,"title":{},"body":{"injectables/TodoService.html":{}}}],["getnumberofusers",{"_index":438,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":503,"title":{"index.html":{}},"body":{}}],["global",{"_index":266,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":539,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{}}}],["guards/jwt",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["here",{"_index":550,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["httponly",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":557,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["id.decorator",{"_index":333,"title":{},"body":{"controllers/TodoController.html":{}}}],["id.decorator.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/PrismaService.html":{},"classes/TodoEntity.html":{},"classes/UserEntity.html":{}}}],["import",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":273,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":26,"title":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":518,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":520,"title":{},"body":{"index.html":{}}}],["is_public",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isadmin",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{}}}],["isarray",{"_index":298,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["isboolean",{"_index":209,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["isboolean()@isoptional",{"_index":206,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["iscompleted",{"_index":201,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/TodoEntity.html":{}}}],["isemail",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":258,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":210,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["isoptional",{"_index":211,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["ispublic",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":212,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":203,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["isstring()@minlength(3)@maxlength(20",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isvalid",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["join",{"_index":546,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":142,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":133,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtuserinfo",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtuserinfo.sub",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["kamil",{"_index":554,"title":{},"body":{"index.html":{}}}],["license",{"_index":560,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":536,"title":{},"body":{"index.html":{}}}],["login",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(id",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(logindto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":82,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":500,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":535,"title":{},"body":{"index.html":{}}}],["mode",{"_index":525,"title":{},"body":{"index.html":{}}}],["module",{"_index":46,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":549,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":555,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":514,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":559,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":397,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"classes/UpdateAuthDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["never",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["node.js",{"_index":506,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":318,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["npm",{"_index":519,"title":{},"body":{"index.html":{}}}],["null",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["number})@apiunauthorizedresponse",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["numtodos",{"_index":344,"title":{},"body":{"controllers/TodoController.html":{}}}],["numusers",{"_index":421,"title":{},"body":{"controllers/UserController.html":{}}}],["onmoduleinit",{"_index":271,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":537,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":564,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":358,"title":{},"body":{"classes/TodoEntity.html":{},"injectables/TodoService.html":{}}}],["package",{"_index":475,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":316,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":351,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parseintpipe",{"_index":319,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":393,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthdto",{"_index":395,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createtododto",{"_index":399,"title":{},"body":{"classes/UpdateTodoDto.html":{}}}],["partialtype(createuserdto",{"_index":403,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":243,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":244,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passthrough",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.isadmin",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":547,"title":{},"body":{"index.html":{}}}],["post",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@public()@httpcode(httpstatus.no_content)@apinocontentresponse()@apiunauthorizedresponse",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(adminguard)@apicreatedresponse({type",{"_index":291,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["prisma.service",{"_index":267,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":277,"title":{},"body":{"injectables/PrismaService.html":{},"classes/TodoEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":383,"title":{},"body":{"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":269,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":53,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":263,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":527,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":505,"title":{},"body":{"index.html":{}}}],["project",{"_index":538,"title":{},"body":{"index.html":{}}}],["promise",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":199,"title":{"properties.html":{}},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/TodoEntity.html":{},"classes/UserEntity.html":{},"properties.html":{}}}],["provide",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":322,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":350,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["put(':id')@useguards(adminguard)@apiokresponse({type",{"_index":314,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["query",{"_index":321,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["query('skip",{"_index":342,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["query('take",{"_index":341,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["range",{"_index":301,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["read",{"_index":548,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["remove",{"_index":287,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":354,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":309,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":517,"title":{},"body":{"index.html":{}}}],["req",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies?.jwt",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.cookies",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user.id",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user.isadmin",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{}}}],["res",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["res.setheader('content",{"_index":346,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["response.clearcookie('jwt",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie('jwt",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":522,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":510,"title":{},"body":{"index.html":{}}}],["secret",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":511,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":512,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":296,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["skipping",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":541,"title":{},"body":{"index.html":{}}}],["src/.../jwt.strategy.ts",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:52",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/create",{"_index":194,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":257,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:5",{"_index":259,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/update",{"_index":392,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts:6",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/auth/guards/admin.guard.ts:9",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/auth/guards/jwt",{"_index":226,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":235,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:20",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":264,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":268,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":274,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":276,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/todo/dto/create",{"_index":197,"title":{},"body":{"classes/CreateTodoDto.html":{},"coverage.html":{}}}],["src/todo/dto/update",{"_index":396,"title":{},"body":{"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts",{"_index":356,"title":{},"body":{"classes/TodoEntity.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts:10",{"_index":367,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:4",{"_index":363,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:5",{"_index":366,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:6",{"_index":362,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:7",{"_index":364,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:8",{"_index":365,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/entities/todo.entity.ts:9",{"_index":361,"title":{},"body":{"classes/TodoEntity.html":{}}}],["src/todo/todo.controller.ts",{"_index":282,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{}}}],["src/todo/todo.controller.ts:41",{"_index":293,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:49",{"_index":304,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:63",{"_index":308,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:74",{"_index":315,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:84",{"_index":311,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.module.ts",{"_index":370,"title":{},"body":{"modules/TodoModule.html":{}}}],["src/todo/todo.service.ts",{"_index":372,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/todo/todo.service.ts:10",{"_index":376,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:16",{"_index":378,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:20",{"_index":380,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:24",{"_index":379,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:28",{"_index":382,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:35",{"_index":381,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:7",{"_index":375,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/user/decorators/user",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/dto/create",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":401,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":425,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":428,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":427,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":431,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":429,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":426,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":430,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.controller.ts",{"_index":405,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:40",{"_index":408,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":410,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:62",{"_index":412,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:73",{"_index":414,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:83",{"_index":413,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":435,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":437,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:15",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:19",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":523,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":526,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":528,"title":{},"body":{"index.html":{}}}],["started",{"_index":504,"title":{"index.html":{}},"body":{}}],["starter",{"_index":516,"title":{},"body":{"index.html":{}}}],["statements",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":551,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/TodoEntity.html":{},"classes/UserEntity.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":233,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":234,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":542,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":562,"title":{},"body":{"modules.html":{}}}],["table",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":295,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["test",{"_index":531,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":534,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":533,"title":{},"body":{"index.html":{}}}],["tests",{"_index":530,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":540,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":278,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":279,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.login(logindto.id",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyjwt(jwt",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign(payload",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(jwt",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.todo.count",{"_index":387,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.todo.create",{"_index":384,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.todo.delete",{"_index":390,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.todo.findmany",{"_index":386,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.todo.findunique",{"_index":388,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.todo.update",{"_index":389,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.prismaservice.user.count",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.create",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.delete",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.findmany",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.findunique",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.update",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["this.reflector.get",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["this.todoservice.create(createtododto",{"_index":340,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.findall(take",{"_index":343,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.findone(id",{"_index":349,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.getnumberoftodos",{"_index":345,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.remove(id",{"_index":355,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.update(id",{"_index":352,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.userservice.create(createuserdto",{"_index":419,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(take",{"_index":420,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.userservice.getnumberofusers",{"_index":422,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":424,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":423,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["title",{"_index":202,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/TodoEntity.html":{}}}],["todo",{"_index":283,"title":{},"body":{"controllers/TodoController.html":{},"classes/TodoEntity.html":{}}}],["todo.controller",{"_index":371,"title":{},"body":{"modules/TodoModule.html":{}}}],["todo.dto",{"_index":329,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDto.html":{}}}],["todo.dto.ts",{"_index":198,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["todo.dto.ts:10",{"_index":204,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["todo.dto.ts:14",{"_index":207,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["todo.dto.ts:6",{"_index":208,"title":{},"body":{"classes/CreateTodoDto.html":{}}}],["todo.service",{"_index":327,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["todo/todo.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["todocontroller",{"_index":281,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["todoentity",{"_index":292,"title":{"classes/TodoEntity.html":{}},"body":{"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"coverage.html":{}}}],["todoentity})@apinotfoundresponse",{"_index":307,"title":{},"body":{"controllers/TodoController.html":{}}}],["todomodule",{"_index":54,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todos",{"_index":303,"title":{},"body":{"controllers/TodoController.html":{}}}],["todoservice",{"_index":326,"title":{"injectables/TodoService.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":302,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["touch",{"_index":552,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["true})@apiheader({name",{"_index":299,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":558,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"controllers/TodoController.html":{},"classes/TodoEntity.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":398,"title":{},"body":{"classes/UpdateTodoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":515,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":529,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":572,"title":{},"body":{"properties.html":{}}}],["update",{"_index":288,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":312,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateauthdto",{"_index":391,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":359,"title":{},"body":{"classes/TodoEntity.html":{},"classes/UserEntity.html":{}}}],["updatetododto",{"_index":313,"title":{"classes/UpdateTodoDto.html":{}},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":400,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useclass",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":320,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["useguards(adminguard",{"_index":338,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":436,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":402,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isadmin",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":415,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/decorators/user",{"_index":332,"title":{},"body":{"controllers/TodoController.html":{}}}],["user/user.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":404,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":407,"title":{"classes/UserEntity.html":{}},"body":{"controllers/UserController.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["userentity})@apinotfoundresponse",{"_index":411,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":290,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":55,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{}}}],["users",{"_index":409,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":162,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(id",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":213,"title":{},"body":{"classes/CreateTodoDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":573,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyjwt",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyjwt(jwt",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":570,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":524,"title":{},"body":{"index.html":{}}}],["website",{"_index":556,"title":{},"body":{"index.html":{}}}],["whoami",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["whoami(request",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["you'd",{"_index":545,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/admin.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC } from '../decorators/public.decorator';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.get(\n      IS_PUBLIC,\n      context.getHandler(),\n    );\n\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    return request.user.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            TodoModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { TodoModule } from './todo/todo.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    PrismaModule,\n    UserModule,\n    TodoModule,\n    AuthModule,\n    ConfigModule.forRoot({\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n      isGlobal: true,\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                whoami\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@Public()@HttpCode(HttpStatus.NO_CONTENT)@ApiNoContentResponse()@ApiUnauthorizedResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        whoami\n                        \n                    \n                \n            \n            \n                \n                    \n                    whoami(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('whoami')@ApiOkResponse({type: Number})@ApiUnauthorizedResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  UnauthorizedException,\n  Res,\n  HttpStatus,\n  HttpCode,\n  Get,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { Request, Response } from 'express';\nimport { AuthService } from './auth.service';\nimport { Public } from './decorators/public.decorator';\nimport { LoginDto } from './dto/login.dto';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Get('whoami')\n  @ApiOkResponse({ type: Number })\n  @ApiUnauthorizedResponse()\n  async whoami(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const { jwt } = request.cookies;\n    const jwtUserInfo = this.authService.verifyJwt(jwt);\n    const isValid = !!jwtUserInfo;\n\n    if (!isValid) {\n      response.clearCookie('jwt');\n      throw new UnauthorizedException();\n    }\n\n    return jwtUserInfo.sub;\n  }\n\n  @Post('login')\n  @Public()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiNoContentResponse()\n  @ApiUnauthorizedResponse()\n  async login(\n    @Body() loginDto: LoginDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const jwt = await this.authService.login(loginDto.id);\n    if (!jwt) {\n      response.clearCookie('jwt');\n      throw new UnauthorizedException();\n    }\n    response.cookie('jwt', jwt, { httpOnly: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UserModule } from '../user/user.module';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.get('JWT_SECRET'),\n        signOptions: { expiresIn: '7d' },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    { provide: APP_GUARD, useClass: JwtAuthGuard },\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                verifyJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyJwt\n                        \n                    \n                \n            \n            \n                \nverifyJwt(jwt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jwt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(id: number) {\n    const user = await this.userService.findOne(id);\n    // skipping password check\n    if (user) {\n      return user;\n    }\n    return null;\n  }\n\n  verifyJwt(jwt: string) {\n    return this.jwtService.verify(jwt);\n  }\n\n  async login(id: number) {\n    const user = await this.userService.findOne(id);\n\n    if (!user) {\n      return null;\n    }\n\n    const payload = {\n      username: user.username,\n      sub: user.id,\n      email: user.email,\n      isAdmin: user.isAdmin,\n    };\n    return this.jwtService.sign(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoDto.html":{"url":"classes/CreateTodoDto.html","title":"class - CreateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/create-todo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                isCompleted\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/create-todo.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/create-todo.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/create-todo.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateTodoDto {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @IsBoolean()\n  @IsOptional()\n  isCompleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @MinLength(3)\n  @MaxLength(20)\n  username: string;\n\n  @IsBoolean()\n  @IsOptional()\n  isAdmin?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC } from '../decorators/public.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.get(\n      IS_PUBLIC,\n      context.getHandler(),\n    );\n\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; username: any; email: any; isAdmin: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\n\nconst cookieExtractor = (req: Request): string | null =>\n  req.cookies?.jwt || null;\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(config: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('JWT_SECRET'),\n    });\n  }\n\n  validate(payload: any) {\n    return {\n      id: payload.sub,\n      username: payload.username,\n      email: payload.email,\n      isAdmin: payload.isAdmin,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt } from 'class-validator';\n\nexport class LoginDto {\n  @IsInt()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodoController.html":{"url":"controllers/TodoController.html","title":"controller - TodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todo\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTodoDto: CreateTodoDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AdminGuard)@ApiCreatedResponse({type: TodoEntity})\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDto\n                                    \n                                                CreateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(res: Response, take: number, skip: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiOkResponse({type: TodoEntity, isArray: true})@ApiHeader({name: 'Content-Range', description: 'total number of todos'})\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: TodoEntity})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(AdminGuard)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateTodoDto: UpdateTodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(AdminGuard)@ApiOkResponse({type: TodoEntity})\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDto\n                                    \n                                                UpdateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  NotFoundException,\n  HttpCode,\n  HttpStatus,\n  ParseIntPipe,\n  Res,\n  UseGuards,\n  Query,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiHeader,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { TodoService } from './todo.service';\nimport { CreateTodoDto } from './dto/create-todo.dto';\nimport { UpdateTodoDto } from './dto/update-todo.dto';\nimport { TodoEntity } from './entities/todo.entity';\nimport { Response } from 'express';\nimport { UserId } from '../user/decorators/user-id.decorator';\nimport { AdminGuard } from '../auth/guards/admin.guard';\nimport { Public } from '../auth/decorators/public.decorator';\n\n@Controller('todo')\n@ApiTags('todo')\nexport class TodoController {\n  constructor(private readonly todoService: TodoService) {}\n\n  @Post()\n  @UseGuards(AdminGuard)\n  @ApiCreatedResponse({ type: TodoEntity })\n  create(@Body() createTodoDto: CreateTodoDto, @UserId() userId: number) {\n    return this.todoService.create(createTodoDto, userId);\n  }\n\n  @Get()\n  @Public()\n  @ApiOkResponse({ type: TodoEntity, isArray: true })\n  @ApiHeader({ name: 'Content-Range', description: 'total number of todos' })\n  async findAll(\n    @Res({ passthrough: true }) res: Response,\n    @Query('take', ParseIntPipe) take: number,\n    @Query('skip', ParseIntPipe) skip: number,\n  ) {\n    const todos = await this.todoService.findAll(take, skip);\n    const numTodos = await this.todoService.getNumberOfTodos();\n    res.setHeader('Content-Range', numTodos);\n    return todos;\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: TodoEntity })\n  @ApiNotFoundResponse()\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    const todo = await this.todoService.findOne(id);\n    if (!todo) {\n      throw new NotFoundException();\n    }\n    return todo;\n  }\n\n  @Put(':id')\n  @UseGuards(AdminGuard)\n  @ApiOkResponse({ type: TodoEntity })\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateTodoDto: UpdateTodoDto,\n  ) {\n    return this.todoService.update(id, updateTodoDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AdminGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.todoService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoEntity.html":{"url":"classes/TodoEntity.html","title":"class - TodoEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/entities/todo.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Todo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isCompleted\n                            \n                            \n                                ownerId\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/todo/entities/todo.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Todo } from '@prisma/client';\n\nexport class TodoEntity implements Todo {\n  id: number;\n  title: string;\n  description: string;\n  isCompleted: boolean;\n  ownerId: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nTodoService\n\nTodoService\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TodoService } from './todo.service';\nimport { TodoController } from './todo.controller';\n\n@Module({\n  controllers: [TodoController],\n  providers: [TodoService],\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getNumberOfTodos\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/todo.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTodoDto: CreateTodoDto, ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDto\n                                    \n                                                CreateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(take: number, skip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfTodos\n                        \n                    \n                \n            \n            \n                \ngetNumberOfTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateTodoDto: UpdateTodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDto\n                                    \n                                                UpdateTodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateTodoDto } from './dto/create-todo.dto';\nimport { UpdateTodoDto } from './dto/update-todo.dto';\n\n@Injectable()\nexport class TodoService {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  create(createTodoDto: CreateTodoDto, ownerId: number) {\n    return this.prismaService.todo.create({\n      data: { ...createTodoDto, ownerId },\n    });\n  }\n\n  findAll(take: number, skip: number) {\n    return this.prismaService.todo.findMany({ take, skip });\n  }\n\n  getNumberOfTodos() {\n    return this.prismaService.todo.count();\n  }\n\n  findOne(id: number) {\n    return this.prismaService.todo.findUnique({ where: { id } });\n  }\n\n  update(id: number, updateTodoDto: UpdateTodoDto) {\n    return this.prismaService.todo.update({\n      where: { id },\n      data: updateTodoDto,\n    });\n  }\n\n  remove(id: number) {\n    return this.prismaService.todo.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTodoDto.html":{"url":"classes/UpdateTodoDto.html","title":"class - UpdateTodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/update-todo.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTodoDto } from './create-todo.dto';\n\nexport class UpdateTodoDto extends PartialType(CreateTodoDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AdminGuard)@ApiCreatedResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(res: Response, take: number, skip: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiOkResponse({type: UserEntity, isArray: true})@ApiHeader({name: 'Content-Range', description: 'total number of users'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserEntity})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(AdminGuard)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(AdminGuard)@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  NotFoundException,\n  HttpStatus,\n  HttpCode,\n  ParseIntPipe,\n  Res,\n  Put,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport {\n  ApiCreatedResponse,\n  ApiHeader,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UserEntity } from './entities/user.entity';\nimport { Response } from 'express';\nimport { AdminGuard } from '../auth/guards/admin.guard';\nimport { Public } from '../auth/decorators/public.decorator';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @UseGuards(AdminGuard)\n  @ApiCreatedResponse({ type: UserEntity })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @Public()\n  @ApiOkResponse({ type: UserEntity, isArray: true })\n  @ApiHeader({ name: 'Content-Range', description: 'total number of users' })\n  async findAll(\n    @Res({ passthrough: true }) res: Response,\n    @Query('take', ParseIntPipe) take: number,\n    @Query('skip', ParseIntPipe) skip: number,\n  ) {\n    const users = await this.userService.findAll(take, skip);\n    const numUsers = await this.userService.getNumberOfUsers();\n    res.setHeader('Content-Range', numUsers);\n    return users;\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserEntity })\n  @ApiNotFoundResponse()\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    const user = await this.userService.findOne(id);\n    if (!user) {\n      throw new NotFoundException();\n    }\n    return user;\n  }\n\n  @Put(':id')\n  @UseGuards(AdminGuard)\n  @ApiOkResponse({ type: UserEntity })\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AdminGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async remove(@Param('id', ParseIntPipe) id: number) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@prisma/client';\n\nexport class UserEntity implements User {\n  id: number;\n  email: string;\n  username: string;\n  isAdmin: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getNumberOfUsers\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(take: number, skip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  create(createUserDto: CreateUserDto): Promise {\n    return this.prismaService.user.create({ data: createUserDto });\n  }\n\n  findAll(take: number, skip: number) {\n    return this.prismaService.user.findMany({ skip, take });\n  }\n\n  getNumberOfUsers() {\n    return this.prismaService.user.count();\n  }\n\n  findOne(id: number) {\n    return this.prismaService.user.findUnique({ where: { id } });\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return this.prismaService.user.update({\n      where: { id },\n      data: updateUserDto,\n    });\n  }\n\n  remove(id: number) {\n    return this.prismaService.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/dto/create-todo.dto.ts\n            \n            class\n            CreateTodoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/todo/dto/update-todo.dto.ts\n            \n            class\n            UpdateTodoDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/entities/todo.entity.ts\n            \n            class\n            TodoEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/todo/todo.controller.ts\n            \n            controller\n            TodoController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todo/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/decorators/user-id.decorator.ts\n            \n            variable\n            UserId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @prisma/client : ^4.2.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            dotenv-cli : ^6.0.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            query-string : ^7.1.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                        \n                            IS_PUBLIC   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            UserId   (src/.../user-id.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/strategies/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req: Request): string | null =>\n  req.cookies?.jwt || null\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC, true)\n                    \n                \n\n\n        \n    \n\n    src/user/decorators/user-id.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: never, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user.id;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
